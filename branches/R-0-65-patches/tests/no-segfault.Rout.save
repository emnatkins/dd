
R : Copyright 1999, The R Development Core Team
Version 0.65.0 Patched (unreleased) (September 23, 1999)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type	"?license" or "?licence" for distribution details.

R is a collaborative project with many contributors.
Type	"?contributors" for a list.

Type	"demo()" for some demos, "help()" for on-line help, or
    	"help.start()" for a HTML browser interface to help.
Type	"q()" to quit R.

> options(error.halt = FALSE) # don't stop on error in batch
> ##~~~~~~~~~~~~~~
> ### Package base
> ###         ~~~~
> 
> ##  !  :
> f <- get("!", pos = 3)
> f()
Error: binary operations require two arguments
> f(NULL)
Error in f(NULL) : invalid argument type
> f(NULL,NULL)
Error in f(NULL, NULL) : operations are possible only for numeric or logical types
> f(list())
Error in f(list()) : invalid argument type
> f(logical(0))
logical(0)
> f(character(0))
Error in f(character(0)) : invalid argument type
> f(FALSE)
[1] TRUE
> 
> ##  !=  :
> f <- get("!=", pos = 3)
> f()
Error in f() : comparison (2) is possible only for vector types
> f(NULL)
Error in f(NULL) : comparison (2) is possible only for vector types
> f(NULL,NULL)
Error in f(NULL, NULL) : comparison (2) is possible only for vector types
> f(list())
Error in f(list()) : comparison (2) is possible only for vector types
> f(logical(0))
Error in f(logical(0)) : comparison (2) is possible only for vector types
> f(character(0))
Error in f(character(0)) : comparison (2) is possible only for vector types
> f(FALSE)
Error in f(FALSE) : comparison (2) is possible only for vector types
> 
> ##  $  :
> f <- get("$", pos = 3)
> f()
Error: 0 arguments passed to "$" which requires 2.
> f(NULL)
Error: 1 argument passed to "$" which requires 2.
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid subscript type
> f(list())
Error: 1 argument passed to "$" which requires 2.
> f(logical(0))
Error: 1 argument passed to "$" which requires 2.
> f(character(0))
Error: 1 argument passed to "$" which requires 2.
> f(FALSE)
Error: 1 argument passed to "$" which requires 2.
> 
> ##  $<-  :
> f <- get("$<-", pos = 3)
> f()
Error: 0 arguments passed to "$<-" which requires 3.
> f(NULL)
Error: 1 argument passed to "$<-" which requires 3.
> f(NULL,NULL)
Error: 2 arguments passed to "$<-" which requires 3.
> f(list())
Error: 1 argument passed to "$<-" which requires 3.
> f(logical(0))
Error: 1 argument passed to "$<-" which requires 3.
> f(character(0))
Error: 1 argument passed to "$<-" which requires 3.
> f(FALSE)
Error: 1 argument passed to "$<-" which requires 3.
> 
> ##  %%  :
> f <- get("%%", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
Error: illegal unary operator
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
Error: illegal unary operator
> 
> ##  %*%  :
> f <- get("%*%", pos = 3)
> f()
Error: %*% requires numeric matrix/vector arguments
> f(NULL)
Error: %*% requires numeric matrix/vector arguments
> f(NULL,NULL)
Error: %*% requires numeric matrix/vector arguments
> f(list())
Error: %*% requires numeric matrix/vector arguments
> f(logical(0))
Error: %*% requires numeric matrix/vector arguments
> f(character(0))
Error: %*% requires numeric matrix/vector arguments
> f(FALSE)
Error: %*% requires numeric matrix/vector arguments
> 
> ##  %/%  :
> f <- get("%/%", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
Error: illegal unary operator
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
Error: illegal unary operator
> 
> ##  %in%  :
> f <- get("%in%", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: Argument "y" is missing, with no default
> f(NULL,NULL)
logical(0)
> f(list())
Error: Argument "y" is missing, with no default
> f(logical(0))
Error: Argument "y" is missing, with no default
> f(character(0))
Error: Argument "y" is missing, with no default
> f(FALSE)
Error: Argument "y" is missing, with no default
> 
> ##  %o%  :
> f <- get("%o%", pos = 3)
> f()
Error: Argument "X" is missing, with no default
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
Error: attempt to set an attribute on NULL
> f(list())
Error: Argument "Y" is missing, with no default
> f(logical(0))
Error: Argument "Y" is missing, with no default
> f(character(0))
Error: Argument "Y" is missing, with no default
> f(FALSE)
Error: Argument "Y" is missing, with no default
> 
> ##  %x%  :
> f <- get("%x%", pos = 3)
> f()
Error: Argument "X" is missing, with no default
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
Error: attempt to set an attribute on NULL
> f(list())
Error: Argument "Y" is missing, with no default
> f(logical(0))
Error: Argument "Y" is missing, with no default
> f(character(0))
Error: Argument "Y" is missing, with no default
> f(FALSE)
Error: Argument "Y" is missing, with no default
> 
> ##  &  :
> f <- get("&", pos = 3)
> f()
Error: binary operations require two arguments
> f(NULL)
Error in f(NULL) : invalid argument type
> f(NULL,NULL)
Error in f(NULL, NULL) : operations are possible only for numeric or logical types
> f(list())
Error in f(list()) : invalid argument type
> f(logical(0))
logical(0)
> f(character(0))
Error in f(character(0)) : invalid argument type
> f(FALSE)
[1] TRUE
> 
> ##  &&  :
> f <- get("&&", pos = 3)
> f()
Error: binary &&/|| requires 2 arguments
> f(NULL)
Error: binary &&/|| requires 2 arguments
> f(NULL,NULL)
Error: binary operator applied to invalid types
> f(list())
Error: binary &&/|| requires 2 arguments
> f(logical(0))
Error: binary &&/|| requires 2 arguments
> f(character(0))
Error: binary &&/|| requires 2 arguments
> f(FALSE)
Error: binary &&/|| requires 2 arguments
> 
> ##  (  :
> f <- get("(", pos = 3)
> f()
Error: 0 arguments passed to "(" which requires 1.
> f(NULL)
NULL
> f(NULL,NULL)
Error: 2 arguments passed to "(" which requires 1.
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  *  :
> f <- get("*", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
Error: illegal unary operator
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
Error: illegal unary operator
> 
> ##  +  :
> f <- get("+", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
logical(0)
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
[1] FALSE
> 
> ##  -  :
> f <- get("-", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
logical(0)
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
[1] FALSE
> 
> ##  .Alias  :
> f <- get(".Alias", pos = 3)
> f()
Error: 0 arguments passed to ".Alias" which requires 1.
> f(NULL)
NULL
> f(NULL,NULL)
Error: 2 arguments passed to ".Alias" which requires 1.
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  .C  :
> f <- get(".C", pos = 3)
> f()
Error in f() : function name must be a string (of length 1)
> f(NULL)
Error in f(NULL) : function name must be a string (of length 1)
> f(NULL,NULL)
Error in f(NULL, NULL) : function name must be a string (of length 1)
> f(list())
Error in f(list()) : function name must be a string (of length 1)
> f(logical(0))
Error in f(logical(0)) : function name must be a string (of length 1)
> f(character(0))
Error in f(character(0)) : function name must be a string (of length 1)
> f(FALSE)
Error in f(FALSE) : function name must be a string (of length 1)
> 
> ##  .Call  :
> f <- get(".Call", pos = 3)
> f()
Error in f() : function name must be a string (of length 1)
> f(NULL)
Error in f(NULL) : function name must be a string (of length 1)
> f(NULL,NULL)
Error in f(NULL, NULL) : function name must be a string (of length 1)
> f(list())
Error in f(list()) : function name must be a string (of length 1)
> f(logical(0))
Error in f(logical(0)) : function name must be a string (of length 1)
> f(character(0))
Error in f(character(0)) : function name must be a string (of length 1)
> f(FALSE)
Error in f(FALSE) : function name must be a string (of length 1)
> 
> ##  .Defunct  :
> f <- get(".Defunct", pos = 3)
> f()
Error: `f' is defunct.
See ?Defunct.
> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  .Deprecated  :
> f <- get(".Deprecated", pos = 3)
> f()
Warning message: 
`f' is deprecated.
See ?Deprecated. in: f() 
> f(NULL)
Warning message: 
`f' is deprecated.
Use `' instead.
See ?Deprecated. in: f(NULL) 
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Warning message: 
`f' is deprecated.
Use `' instead.
See ?Deprecated. in: f(list()) 
> f(logical(0))
Warning message: 
`f' is deprecated.
Use `' instead.
See ?Deprecated. in: f(logical(0)) 
> f(character(0))
Warning message: 
`f' is deprecated.
Use `' instead.
See ?Deprecated. in: f(character(0)) 
> f(FALSE)
Warning message: 
`f' is deprecated.
Use `FALSE' instead.
See ?Deprecated. in: f(FALSE) 
> 
> ##  .External  :
> f <- get(".External", pos = 3)
> f()
Error in f() : function name must be a string (of length 1)
> f(NULL)
Error in f(NULL) : function name must be a string (of length 1)
> f(NULL,NULL)
Error in f(NULL, NULL) : function name must be a string (of length 1)
> f(list())
Error in f(list()) : function name must be a string (of length 1)
> f(logical(0))
Error in f(logical(0)) : function name must be a string (of length 1)
> f(character(0))
Error in f(character(0)) : function name must be a string (of length 1)
> f(FALSE)
Error in f(FALSE) : function name must be a string (of length 1)
> 
> ##  .Fortran  :
> f <- get(".Fortran", pos = 3)
> f()
Error in f() : function name must be a string (of length 1)
> f(NULL)
Error in f(NULL) : function name must be a string (of length 1)
> f(NULL,NULL)
Error in f(NULL, NULL) : function name must be a string (of length 1)
> f(list())
Error in f(list()) : function name must be a string (of length 1)
> f(logical(0))
Error in f(logical(0)) : function name must be a string (of length 1)
> f(character(0))
Error in f(character(0)) : function name must be a string (of length 1)
> f(FALSE)
Error in f(FALSE) : function name must be a string (of length 1)
> 
> ##  .Internal  :
> f <- get(".Internal", pos = 3)
> f()
Error: 0 arguments passed to ".Internal" which requires 1.
> f(NULL)
Error in f(NULL) : invalid internal function
> f(NULL,NULL)
Error: 2 arguments passed to ".Internal" which requires 1.
> f(list())
Error in f(list()) : no internal function "list"
> f(logical(0))
Error in f(logical(0)) : no internal function "logical"
> f(character(0))
Error in f(character(0)) : no internal function "character"
> f(FALSE)
Error in f(FALSE) : invalid .Internal() argument
> 
> ##  .NotYetImplemented  :
> f <- get(".NotYetImplemented", pos = 3)
> f()
Error: `f' is not implemented yet
> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  .NotYetUsed  :
> f <- get(".NotYetUsed", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Warning message: 
argument `' is not used (yet) in: f(NULL) 
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Warning message: 
argument `' is not used (yet) in: f(list()) 
> f(logical(0))
Warning message: 
argument `' is not used (yet) in: f(logical(0)) 
> f(character(0))
Warning message: 
argument `' is not used (yet) in: f(character(0)) 
> f(FALSE)
Warning message: 
argument `FALSE' is not used (yet) in: f(FALSE) 
> 
> ##  .Primitive  :
> f <- get(".Primitive", pos = 3)
> f()
Error: 0 arguments passed to ".Primitive" which requires 1.
> f(NULL)
Error in f(NULL) : string argument required
> f(NULL,NULL)
Error: 2 arguments passed to ".Primitive" which requires 1.
> f(list())
Error in f(list()) : string argument required
> f(logical(0))
Error in f(logical(0)) : string argument required
> f(character(0))
Error in f(character(0)) : string argument required
> f(FALSE)
Error in f(FALSE) : string argument required
> 
> ##  .packages  :
> f <- get(".packages", pos = 3)
> f()
> f(NULL)
Error in if (all.available) { : missing value where logical needed
> f(NULL,NULL)
Error in if (all.available) { : missing value where logical needed
> f(list())
Error in if (all.available) { : missing value where logical needed
> f(logical(0))
Error in if (all.available) { : missing value where logical needed
> f(character(0))
Error in if (all.available) { : missing value where logical needed
> f(FALSE)
> 
> ##  /  :
> f <- get("/", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
Error: illegal unary operator
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
Error: illegal unary operator
> 
> ##  :  :
> f <- get(":", pos = 3)
> f()
Error: 0 arguments passed to ":" which requires 2.
> f(NULL)
Error: 1 argument passed to ":" which requires 2.
> f(NULL,NULL)
Error in f(NULL, NULL) : NA/NaN argument
> f(list())
Error: 1 argument passed to ":" which requires 2.
> f(logical(0))
Error: 1 argument passed to ":" which requires 2.
> f(character(0))
Error: 1 argument passed to ":" which requires 2.
> f(FALSE)
Error: 1 argument passed to ":" which requires 2.
> 
> ##  <  :
> f <- get("<", pos = 3)
> f()
Error in f() : comparison (3) is possible only for vector types
> f(NULL)
Error in f(NULL) : comparison (3) is possible only for vector types
> f(NULL,NULL)
Error in f(NULL, NULL) : comparison (3) is possible only for vector types
> f(list())
Error in f(list()) : comparison (3) is possible only for vector types
> f(logical(0))
Error in f(logical(0)) : comparison (3) is possible only for vector types
> f(character(0))
Error in f(character(0)) : comparison (3) is possible only for vector types
> f(FALSE)
Error in f(FALSE) : comparison (3) is possible only for vector types
> 
> ##  <-  :
> f <- get("<-", pos = 3)
> f()
Error: incorrect number of arguments to "<-"
> f(NULL)
Error: incorrect number of arguments to "<-"
> f(NULL,NULL)
Error: invalid (NULL) left side of assignment
> f(list())
Error: incorrect number of arguments to "<-"
> f(logical(0))
Error: incorrect number of arguments to "<-"
> f(character(0))
Error: incorrect number of arguments to "<-"
> f(FALSE)
Error: incorrect number of arguments to "<-"
> 
> ##  <<-  :
> f <- get("<<-", pos = 3)
> f()
Error: incorrect number of arguments to "<<-"
> f(NULL)
Error: incorrect number of arguments to "<<-"
> f(NULL,NULL)
Error: invalid (NULL) left side of assignment
> f(list())
Error: incorrect number of arguments to "<<-"
> f(logical(0))
Error: incorrect number of arguments to "<<-"
> f(character(0))
Error: incorrect number of arguments to "<<-"
> f(FALSE)
Error: incorrect number of arguments to "<<-"
> 
> ##  <=  :
> f <- get("<=", pos = 3)
> f()
Error in f() : comparison (4) is possible only for vector types
> f(NULL)
Error in f(NULL) : comparison (4) is possible only for vector types
> f(NULL,NULL)
Error in f(NULL, NULL) : comparison (4) is possible only for vector types
> f(list())
Error in f(list()) : comparison (4) is possible only for vector types
> f(logical(0))
Error in f(logical(0)) : comparison (4) is possible only for vector types
> f(character(0))
Error in f(character(0)) : comparison (4) is possible only for vector types
> f(FALSE)
Error in f(FALSE) : comparison (4) is possible only for vector types
> 
> ##  ==  :
> f <- get("==", pos = 3)
> f()
Error in f() : comparison (1) is possible only for vector types
> f(NULL)
Error in f(NULL) : comparison (1) is possible only for vector types
> f(NULL,NULL)
Error in f(NULL, NULL) : comparison (1) is possible only for vector types
> f(list())
Error in f(list()) : comparison (1) is possible only for vector types
> f(logical(0))
Error in f(logical(0)) : comparison (1) is possible only for vector types
> f(character(0))
Error in f(character(0)) : comparison (1) is possible only for vector types
> f(FALSE)
Error in f(FALSE) : comparison (1) is possible only for vector types
> 
> ##  >  :
> f <- get(">", pos = 3)
> f()
Error in f() : comparison (6) is possible only for vector types
> f(NULL)
Error in f(NULL) : comparison (6) is possible only for vector types
> f(NULL,NULL)
Error in f(NULL, NULL) : comparison (6) is possible only for vector types
> f(list())
Error in f(list()) : comparison (6) is possible only for vector types
> f(logical(0))
Error in f(logical(0)) : comparison (6) is possible only for vector types
> f(character(0))
Error in f(character(0)) : comparison (6) is possible only for vector types
> f(FALSE)
Error in f(FALSE) : comparison (6) is possible only for vector types
> 
> ##  >=  :
> f <- get(">=", pos = 3)
> f()
Error in f() : comparison (5) is possible only for vector types
> f(NULL)
Error in f(NULL) : comparison (5) is possible only for vector types
> f(NULL,NULL)
Error in f(NULL, NULL) : comparison (5) is possible only for vector types
> f(list())
Error in f(list()) : comparison (5) is possible only for vector types
> f(logical(0))
Error in f(logical(0)) : comparison (5) is possible only for vector types
> f(character(0))
Error in f(character(0)) : comparison (5) is possible only for vector types
> f(FALSE)
Error in f(FALSE) : comparison (5) is possible only for vector types
> 
> ##  Arg  :
> f <- get("Arg", pos = 3)
> f()
Error: 0 arguments passed to "Arg" which requires 1.
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(NULL,NULL)
Error: 2 arguments passed to "Arg" which requires 1.
> f(list())
Error in f(list()) : non-numeric argument to function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : non-numeric argument to function
> f(FALSE)
[1] 0
> 
> ##  C  :
> f <- get("C", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: object not interpretable as a factor
> f(NULL,NULL)
Error: object not interpretable as a factor
> f(list())
Error: object not interpretable as a factor
> f(logical(0))
Error: object not interpretable as a factor
> f(character(0))
Error: object not interpretable as a factor
> f(FALSE)
Error: object not interpretable as a factor
> 
> ##  CRAN.packages  :
> f <- get("CRAN.packages", pos = 3)
> f()
Error: "scan" can't open file
> f(NULL)
Error: "scan" can't open file
> f(NULL,NULL)
Error in arg == choices : comparison (1) is possible only for vector types
> f(list())
Error: "scan" can't open file
> f(logical(0))
Error: "scan" can't open file
> f(character(0))
Error: "scan" can't open file
> f(FALSE)
Error: "scan" can't open file
> 
> ##  Conj  :
> f <- get("Conj", pos = 3)
> f()
Error: 0 arguments passed to "Conj" which requires 1.
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(NULL,NULL)
Error: 2 arguments passed to "Conj" which requires 1.
> f(list())
Error in f(list()) : non-numeric argument to function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : non-numeric argument to function
> f(FALSE)
[1] 0
> 
> ##  D  :
> f <- get("D", pos = 3)
> f()
Error: Argument "expr" is missing, with no default
> f(NULL)
Error: Argument "namevec" is missing, with no default
> f(NULL,NULL)
Error in D(expr, namevec) : variable must be a character string
> f(list())
Error: Argument "namevec" is missing, with no default
> f(logical(0))
Error: Argument "namevec" is missing, with no default
> f(character(0))
Error: Argument "namevec" is missing, with no default
> f(FALSE)
Error: Argument "namevec" is missing, with no default
> 
> ##  GNOME  :
> f <- get("GNOME", pos = 3)
> f()
Error in Gnome(display, width, height, pointsize) : unable to start device Gnome
> f(NULL)
Error in Gnome(display, width, height, pointsize) : invalid string argument
> f(NULL,NULL)
Error in Gnome(display, width, height, pointsize) : invalid string argument
> f(list())
Error in Gnome(display, width, height, pointsize) : invalid string argument
> f(logical(0))
Error in Gnome(display, width, height, pointsize) : invalid string argument
> f(character(0))
Error in Gnome(display, width, height, pointsize) : invalid string argument
> f(FALSE)
Error in Gnome(display, width, height, pointsize) : invalid string argument
> 
> ##  Gamma  :
> f <- get("Gamma", pos = 3)
> f()

Family: Gamma 
Link function: inverse 

> f(NULL)
Error: NULL link not available for gamma family, available links are "inverse",  "log" and "identity"
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: list() link not available for gamma family, available links are "inverse",  "log" and "identity"
> f(logical(0))
Error: logical(0) link not available for gamma family, available links are "inverse",  "log" and "identity"
> f(character(0))
Error: character(0) link not available for gamma family, available links are "inverse",  "log" and "identity"
> f(FALSE)
Error: FALSE link not available for gamma family, available links are "inverse",  "log" and "identity"
> 
> ##  I  :
> f <- get("I", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
list()
attr(,"class")
[1] "AsIs"
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
list()
attr(,"class")
[1] "AsIs"
> f(logical(0))
logical(0)
attr(,"class")
[1] "AsIs"
> f(character(0))
character(0)
attr(,"class")
[1] "AsIs"
> f(FALSE)
[1] FALSE
attr(,"class")
[1] "AsIs"
> 
> ##  IQR  :
> f <- get("IQR", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NA
> f(NULL,NULL)
Error in if (na.rm) x <- x[!is.na(x)] else if (any(is.na(x))) stop("Missing values and NaN's not allowed if `na.rm' is FALSE") : missing value where logical needed
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
[1] NA
> f(character(0))
[1] NA
> f(FALSE)
[1] 0
> 
> ##  Im  :
> f <- get("Im", pos = 3)
> f()
Error: 0 arguments passed to "Im" which requires 1.
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(NULL,NULL)
Error: 2 arguments passed to "Im" which requires 1.
> f(list())
Error in f(list()) : non-numeric argument to function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : non-numeric argument to function
> f(FALSE)
[1] 0
> 
> ##  Machine  :
> f <- get("Machine", pos = 3)
> f()
$double.eps
[1] 2.220446e-16

$double.neg.eps
[1] 1.110223e-16

$double.xmin
[1] 2.225074e-308

$double.xmax
[1] 1.797693e+308

$double.base
[1] 2

$double.digits
[1] 53

$double.rounding
[1] 5

$double.guard
[1] 0

$double.ulp.digits
[1] -52

$double.neg.ulp.digits
[1] -53

$double.exponent
[1] 11

$double.min.exp
[1] -1022

$double.max.exp
[1] 1024

$integer.max
[1] 2147483647

> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  Math.data.frame  :
> f <- get("Math.data.frame", pos = 3)
> f()
Error: Object ".Generic" not found
> f(NULL)
Error: Object ".Generic" not found
> f(NULL,NULL)
Error: Object ".Generic" not found
> f(list())
Error: Object ".Generic" not found
> f(logical(0))
Error: Object ".Generic" not found
> f(character(0))
Error: Object ".Generic" not found
> f(FALSE)
Error: Object ".Generic" not found
> 
> ##  Math.factor  :
> f <- get("Math.factor", pos = 3)
> f()
Error: Object ".Generic" not found
> f(NULL)
Error: Object ".Generic" not found
> f(NULL,NULL)
Error: Object ".Generic" not found
> f(list())
Error: Object ".Generic" not found
> f(logical(0))
Error: Object ".Generic" not found
> f(character(0))
Error: Object ".Generic" not found
> f(FALSE)
Error: Object ".Generic" not found
> 
> ##  Mod  :
> f <- get("Mod", pos = 3)
> f()
Error: 0 arguments passed to "Mod" which requires 1.
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(NULL,NULL)
Error: 2 arguments passed to "Mod" which requires 1.
> f(list())
Error in f(list()) : non-numeric argument to function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : non-numeric argument to function
> f(FALSE)
[1] 0
> 
> ##  NCOL  :
> f <- get("NCOL", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] 1
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
[1] 1
> f(logical(0))
[1] 1
> f(character(0))
[1] 1
> f(FALSE)
[1] 1
> 
> ##  NROW  :
> f <- get("NROW", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] 0
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
[1] 0
> f(logical(0))
[1] 0
> f(character(0))
[1] 0
> f(FALSE)
[1] 1
> 
> ##  NextMethod  :
> f <- get("NextMethod", pos = 3)
> f()
Error: NextMethod called from outside a closure
> f(NULL)
Error: NextMethod called from outside a closure
> f(NULL,NULL)
Error: NextMethod called from outside a closure
> f(list())
Error: NextMethod called from outside a closure
> f(logical(0))
Error: NextMethod called from outside a closure
> f(character(0))
Error: NextMethod called from outside a closure
> f(FALSE)
Error: NextMethod called from outside a closure
> 
> ##  Ops.data.frame  :
> f <- get("Ops.data.frame", pos = 3)
> f()
Error: Object ".Method" not found
> f(NULL)
Error: Object ".Method" not found
> f(NULL,NULL)
Error: Object ".Method" not found
> f(list())
Error: Object ".Method" not found
> f(logical(0))
Error: Object ".Method" not found
> f(character(0))
Error: Object ".Method" not found
> f(FALSE)
Error: Object ".Method" not found
> 
> ##  Ops.factor  :
> f <- get("Ops.factor", pos = 3)
> f()
Error: Object ".Generic" not found
> f(NULL)
Error: Object ".Generic" not found
> f(NULL,NULL)
Error: Object ".Generic" not found
> f(list())
Error: Object ".Generic" not found
> f(logical(0))
Error: Object ".Generic" not found
> f(character(0))
Error: Object ".Generic" not found
> f(FALSE)
Error: Object ".Generic" not found
> 
> ##  Ops.ordered  :
> f <- get("Ops.ordered", pos = 3)
> f()
Error: Object ".Generic" not found
> f(NULL)
Error: Object ".Generic" not found
> f(NULL,NULL)
Error: Object ".Generic" not found
> f(list())
Error: Object ".Generic" not found
> f(logical(0))
Error: Object ".Generic" not found
> f(character(0))
Error: Object ".Generic" not found
> f(FALSE)
Error: Object ".Generic" not found
> 
> ##  Platform  :
> f <- get("Platform", pos = 3)
> f()
$OS.type
[1] "Unix"

$file.sep
[1] "/"

$dynlib.ext
[1] ".so"

> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  R.Version  :
> f <- get("R.Version", pos = 3)
> f()
$platform
[1] "sparc-sun-solaris2.5.1"

$arch
[1] "sparc"

$os
[1] "solaris2.5.1"

$system
[1] "sparc, solaris2.5.1"

$status
[1] "Patched (unreleased)"

$major
[1] "0"

$minor
[1] "65.0"

$year
[1] "1999"

$month
[1] "September"

$day
[1] "23"

$language
[1] "R"

> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  R.home  :
> f <- get("R.home", pos = 3)
> f()
[1] "/users/u1/staff/maechler/R/r-release/Installed"
> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  RNGkind  :
> f <- get("RNGkind", pos = 3)
> f()
[1] "Wichmann-Hill"
> f(NULL)
[1] "Wichmann-Hill"
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
[1] "Wichmann-Hill"
> f(logical(0))
[1] "Wichmann-Hill"
> f(character(0))
[1] "Wichmann-Hill"
> f(FALSE)
Error: 'kind' must be a character of length 1 (RNG to be used).
> 
> ##  Re  :
> f <- get("Re", pos = 3)
> f()
Error: 0 arguments passed to "Re" which requires 1.
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(NULL,NULL)
Error: 2 arguments passed to "Re" which requires 1.
> f(list())
Error in f(list()) : non-numeric argument to function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : non-numeric argument to function
> f(FALSE)
[1] 0
> 
> ##  Recall  :
> f <- get("Recall", pos = 3)
> f()
Error: Recall called from outside a closure
> f(NULL)
Error: Recall called from outside a closure
> f(NULL,NULL)
Error: Recall called from outside a closure
> f(list())
Error: Recall called from outside a closure
> f(logical(0))
Error: Recall called from outside a closure
> f(character(0))
Error: Recall called from outside a closure
> f(FALSE)
Error: Recall called from outside a closure
> 
> ##  Summary.data.frame  :
> f <- get("Summary.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
Error: attempt to set an attribute on NULL
> f(list())
Error: only defined on a data frame with all numeric or complex variables
> f(logical(0))
Error: only defined on a data frame with all numeric or complex variables
> f(character(0))
Error: only defined on a data frame with all numeric or complex variables
> f(FALSE)
Error: only defined on a data frame with all numeric or complex variables
> 
> ##  Summary.factor  :
> f <- get("Summary.factor", pos = 3)
> f()
Error: Object ".Generic" not found
> f(NULL)
Error: Object ".Generic" not found
> f(NULL,NULL)
Error: Object ".Generic" not found
> f(list())
Error: Object ".Generic" not found
> f(logical(0))
Error: Object ".Generic" not found
> f(character(0))
Error: Object ".Generic" not found
> f(FALSE)
Error: Object ".Generic" not found
> 
> ##  UseMethod  :
> f <- get("UseMethod", pos = 3)
> f()
Error: UseMethod called from outside a closure
> f(NULL)
Error: UseMethod called from outside a closure
> f(NULL,NULL)
Error in f(NULL, NULL) : first argument must be a method name
> f(list())
Error: UseMethod called from outside a closure
> f(logical(0))
Error: UseMethod called from outside a closure
> f(character(0))
Error: UseMethod called from outside a closure
> f(FALSE)
Error: UseMethod called from outside a closure
> 
> ##  Version  :
> f <- get("Version", pos = 3)
> f()
$platform
[1] "sparc-sun-solaris2.5.1"

$arch
[1] "sparc"

$os
[1] "solaris2.5.1"

$system
[1] "sparc, solaris2.5.1"

$status
[1] "Patched (unreleased)"

$major
[1] "0"

$minor
[1] "65.0"

$year
[1] "1999"

$month
[1] "September"

$day
[1] "23"

$language
[1] "R"

Warning message: 
`f' is deprecated.
Use `R.Version' instead.
See ?Deprecated. in: .Deprecated("R.Version") 
> f(NULL)
Error in f(NULL) : unused argument to function
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in f(list()) : unused argument to function
> f(logical(0))
Error in f(logical(0)) : unused argument to function
> f(character(0))
Error in f(character(0)) : unused argument to function
> f(FALSE)
Error in f(FALSE) : unused argument to function
> 
> ##  X11  :
> f <- get("X11", pos = 3)
> f()
> f(NULL)
Error in X11(display, width, height, pointsize, gamma, colortype, maxcubesize) : invalid string argument
> f(NULL,NULL)
Error in X11(display, width, height, pointsize, gamma, colortype, maxcubesize) : invalid string argument
> f(list())
Error in X11(display, width, height, pointsize, gamma, colortype, maxcubesize) : invalid string argument
> f(logical(0))
Error in X11(display, width, height, pointsize, gamma, colortype, maxcubesize) : invalid string argument
> f(character(0))
Error in X11(display, width, height, pointsize, gamma, colortype, maxcubesize) : invalid string argument
> f(FALSE)
Error in X11(display, width, height, pointsize, gamma, colortype, maxcubesize) : invalid string argument
> 
> ##  [  :
> f <- get("[", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : no index specified
> f(logical(0))
Error in f(logical(0)) : no index specified
> f(character(0))
Error in f(character(0)) : no index specified
> f(FALSE)
Error in f(FALSE) : no index specified
> 
> ##  [.data.frame  :
> f <- get("[.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  [.factor  :
> f <- get("[.factor", pos = 3)
> f()
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL,NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(list())
Error in NextMethod(generic, object, ...) : object not specified
> f(logical(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(character(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(FALSE)
Error in NextMethod(generic, object, ...) : object not specified
> 
> ##  [.formula  :
> f <- get("[.formula", pos = 3)
> f()
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL,NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(list())
Error in NextMethod(generic, object, ...) : object not specified
> f(logical(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(character(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(FALSE)
Error in NextMethod(generic, object, ...) : object not specified
> 
> ##  [.noquote  :
> f <- get("[.noquote", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error in unclass(x)[...] : no index specified
> f(logical(0))
Error in unclass(x)[...] : no index specified
> f(character(0))
Error in unclass(x)[...] : no index specified
> f(FALSE)
Error in unclass(x)[...] : no index specified
> 
> ##  [.ts  :
> f <- get("[.ts", pos = 3)
> f()
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL,NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(list())
Error in NextMethod(generic, object, ...) : object not specified
> f(logical(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(character(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(FALSE)
Error in NextMethod(generic, object, ...) : object not specified
> 
> ##  [<-  :
> f <- get("[<-", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
Error in f(FALSE, NULL) : incompatible types
> 
> ##  [<-.data.frame  :
> f <- get("[<-.data.frame", pos = 3)
> f()
Error: Need 0, 1, or 2 subscripts
> f(NULL)
Error: Need 0, 1, or 2 subscripts
> f(NULL,NULL)
Error: can't coerce NULL into a data.frame
> f(list())
Error: Need 0, 1, or 2 subscripts
> f(logical(0))
Error: Need 0, 1, or 2 subscripts
> f(character(0))
Error: Need 0, 1, or 2 subscripts
> f(FALSE)
Error: Need 0, 1, or 2 subscripts
> 
> ##  [<-.factor  :
> f <- get("[<-.factor", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: Argument "value" is missing, with no default
> f(NULL,NULL)
Error: Argument "value" is missing, with no default
> f(list())
Error: Argument "value" is missing, with no default
> f(logical(0))
Error: Argument "value" is missing, with no default
> f(character(0))
Error: Argument "value" is missing, with no default
> f(FALSE)
Error: Argument "value" is missing, with no default
> 
> ##  [[  :
> f <- get("[[", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : no index specified
> f(logical(0))
Error in f(logical(0)) : no index specified
> f(character(0))
Error in f(character(0)) : no index specified
> f(FALSE)
Error in f(FALSE) : no index specified
> 
> ##  [[.data.frame  :
> f <- get("[[.data.frame", pos = 3)
> f()
Error: Argument "i" is missing, with no default
> f(NULL)
Error: Argument "i" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error: Argument "i" is missing, with no default
> f(logical(0))
Error: Argument "i" is missing, with no default
> f(character(0))
Error: Argument "i" is missing, with no default
> f(FALSE)
Error: Argument "i" is missing, with no default
> 
> ##  [[<-  :
> f <- get("[[<-", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error: attempt to select less than one element
> f(logical(0))
Error: more elements supplied than there are to replace
> f(character(0))
Error: more elements supplied than there are to replace
> f(FALSE)
Error: more elements supplied than there are to replace
> 
> ##  [[<-.data.frame  :
> f <- get("[[<-.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: Argument "value" is missing, with no default
> f(NULL,NULL)
Error: Argument "value" is missing, with no default
> f(list())
Error: Argument "value" is missing, with no default
> f(logical(0))
Error: Argument "value" is missing, with no default
> f(character(0))
Error: Argument "value" is missing, with no default
> f(FALSE)
Error: Argument "value" is missing, with no default
> 
> ##  ^  :
> f <- get("^", pos = 3)
> f()
Error: operator with more than two arguments
> f(NULL)
Error in f(NULL) : Invalid argument to unary operator
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : Invalid argument to unary operator
> f(logical(0))
Error: illegal unary operator
> f(character(0))
Error in f(character(0)) : Invalid argument to unary operator
> f(FALSE)
Error: illegal unary operator
> 
> ##  abbreviate  :
> f <- get("abbreviate", pos = 3)
> f()
Error: Argument "names.arg" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
Error in minlength <= 0 : comparison (4) is possible only for vector types
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
 FALSE 
"FALS" 
> 
> ##  abline  :
> f <- get("abline", pos = 3)
> f()
Error: plot.new has not been called yet
> f(NULL)
Error: plot.new has not been called yet
> f(NULL,NULL)
Error: plot.new has not been called yet
> f(list())
Error: plot.new has not been called yet
> f(logical(0))
Error: plot.new has not been called yet
> f(character(0))
Error: plot.new has not been called yet
> f(FALSE)
Error: plot.new has not been called yet
> 
> ##  abs  :
> f <- get("abs", pos = 3)
> f()
Error: 0 arguments passed to "abs" which requires 1.
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(NULL,NULL)
Error: 2 arguments passed to "abs" which requires 1.
> f(list())
Error in f(list()) : non-numeric argument to function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : non-numeric argument to function
> f(FALSE)
[1] 0
> 
> ##  acos  :
> f <- get("acos", pos = 3)
> f()
Error: 0 arguments passed to "acos" which requires 1.
> f(NULL)
Error in f(NULL) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error: 2 arguments passed to "acos" which requires 1.
> f(list())
Error in f(list()) : Non-numeric argument to mathematical function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : Non-numeric argument to mathematical function
> f(FALSE)
[1] 1.570796
> 
> ##  acosh  :
> f <- get("acosh", pos = 3)
> f()
Error: 0 arguments passed to "acosh" which requires 1.
> f(NULL)
Error in f(NULL) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error: 2 arguments passed to "acosh" which requires 1.
> f(list())
Error in f(list()) : Non-numeric argument to mathematical function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : Non-numeric argument to mathematical function
> f(FALSE)
[1] NaN
Warning message: 
NaNs produced in: f(FALSE) 
> 
> ##  add.scope  :
> f <- get("add.scope", pos = 3)
> f()
Error: Argument "terms1" is missing, with no default
> f(NULL)
Error: argument is not a valid model
> f(NULL,NULL)
Error: argument is not a valid model
> f(list())
Error: invalid formula
> f(logical(0))
Error: invalid formula
> f(character(0))
> f(FALSE)
Error: invalid formula
> 
> ##  add1  :
> f <- get("add1", pos = 3)
> f()
Error: no terms in scope
> f(NULL)
Error: no terms in scope
> f(NULL,NULL)
Error: no terms in scope
> f(list())
Error: no terms in scope
> f(logical(0))
Error: no terms in scope
> f(character(0))
Error: no terms in scope
> f(FALSE)
Error: no terms in scope
> 
> ##  add1.default  :
> f <- get("add1.default", pos = 3)
> f()
Error: no terms in scope
> f(NULL)
Error: no terms in scope
> f(NULL,NULL)
Error: no terms in scope
> f(list())
Error: no terms in scope
> f(logical(0))
Error: no terms in scope
> f(character(0))
Error: no terms in scope
> f(FALSE)
Error: no terms in scope
> 
> ##  add1.glm  :
> f <- get("add1.glm", pos = 3)
> f()
Error: Argument "scope" is missing, with no default
> f(NULL)
Error: Argument "scope" is missing, with no default
> f(NULL,NULL)
Error: argument is not a valid model
> f(list())
Error: Argument "scope" is missing, with no default
> f(logical(0))
Error: Argument "scope" is missing, with no default
> f(character(0))
Error: Argument "scope" is missing, with no default
> f(FALSE)
Error: Argument "scope" is missing, with no default
> 
> ##  add1.lm  :
> f <- get("add1.lm", pos = 3)
> f()
Error: no terms in scope
> f(NULL)
Error: no terms in scope
> f(NULL,NULL)
Error: no terms in scope
> f(list())
Error: no terms in scope
> f(logical(0))
Error: no terms in scope
> f(character(0))
Error: no terms in scope
> f(FALSE)
Error: no terms in scope
> 
> ##  add1.mlm  :
> f <- get("add1.mlm", pos = 3)
> f()
Error: no add1 method implemented for mlm models
> f(NULL)
Error: no add1 method implemented for mlm models
> f(NULL,NULL)
Error: no add1 method implemented for mlm models
> f(list())
Error: no add1 method implemented for mlm models
> f(logical(0))
Error: no add1 method implemented for mlm models
> f(character(0))
Error: no add1 method implemented for mlm models
> f(FALSE)
Error: no add1 method implemented for mlm models
> 
> ##  aggregate  :
> f <- get("aggregate", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: can't coerce NULL into a data.frame
> f(NULL,NULL)
Error: can't coerce NULL into a data.frame
> f(list())
Error: Argument "by" is missing, with no default
> f(logical(0))
Error: Argument "by" is missing, with no default
> f(character(0))
Error: Argument "by" is missing, with no default
> f(FALSE)
Error: Argument "by" is missing, with no default
> 
> ##  aggregate.data.frame  :
> f <- get("aggregate.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: can't coerce NULL into a data.frame
> f(NULL,NULL)
Error: can't coerce NULL into a data.frame
> f(list())
Error: Argument "by" is missing, with no default
> f(logical(0))
Error: Argument "by" is missing, with no default
> f(character(0))
Error: Argument "by" is missing, with no default
> f(FALSE)
Error: Argument "by" is missing, with no default
> 
> ##  aggregate.default  :
> f <- get("aggregate.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: can't coerce NULL into a data.frame
> f(NULL,NULL)
Error: can't coerce NULL into a data.frame
> f(list())
Error: Argument "by" is missing, with no default
> f(logical(0))
Error: Argument "by" is missing, with no default
> f(character(0))
Error: Argument "by" is missing, with no default
> f(FALSE)
Error: Argument "by" is missing, with no default
> 
> ##  aggregate.ts  :
> f <- get("aggregate.ts", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: ts object must have one or more observations
> f(NULL,NULL)
Error: ts object must have one or more observations
> f(list())
Error: ts object must have one or more observations
> f(logical(0))
Error: ts object must have one or more observations
> f(character(0))
Error: ts object must have one or more observations
> f(FALSE)
Time Series:
Start = 1 
End = 1 
Frequency = 1 
[1] FALSE
> 
> ##  alias  :
> f <- get("alias", pos = 3)
> f()
Error: no applicable method for "alias"
> f(NULL)
Error: no applicable method for "alias"
> f(NULL,NULL)
Error: no applicable method for "alias"
> f(list())
Error: no applicable method for "alias"
> f(logical(0))
Error: no applicable method for "alias"
> f(character(0))
Error: no applicable method for "alias"
> f(FALSE)
Error: no applicable method for "alias"
> 
> ##  alias.formula  :
> f <- get("alias.formula", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: subscript out of bounds
> f(NULL,NULL)
Error: subscript out of bounds
> f(list())
Error: subscript out of bounds
> f(logical(0))
Error: subscript out of bounds
> f(character(0))
Error: subscript out of bounds
> f(FALSE)
Error: subscript out of bounds
> 
> ##  alias.lm  :
> f <- get("alias.lm", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: heap memory (6144 Kb) exhausted [needed 4194304 Kb more]
       See "help(Memory)" on how to increase the heap size.
> f(NULL,NULL)
Error: heap memory (6144 Kb) exhausted [needed 4194304 Kb more]
       See "help(Memory)" on how to increase the heap size.
> f(list())
Error: heap memory (6144 Kb) exhausted [needed 4194304 Kb more]
       See "help(Memory)" on how to increase the heap size.
> f(logical(0))
Error: heap memory (6144 Kb) exhausted [needed 4194304 Kb more]
       See "help(Memory)" on how to increase the heap size.
> f(character(0))
Error: heap memory (6144 Kb) exhausted [needed 4194304 Kb more]
       See "help(Memory)" on how to increase the heap size.
> f(FALSE)
Error: heap memory (6144 Kb) exhausted [needed 4194304 Kb more]
       See "help(Memory)" on how to increase the heap size.
> 
> ##  alist  :
> f <- get("alist", pos = 3)
> f()
list()
> f(NULL)
[[1]]
NULL

> f(NULL,NULL)
[[1]]
NULL

[[2]]
NULL

> f(list())
[[1]]
list()

> f(logical(0))
[[1]]
logical(0)

> f(character(0))
[[1]]
character(0)

> f(FALSE)
[[1]]
[1] FALSE

> 
> ##  all  :
> f <- get("all", pos = 3)
> f()
[1] TRUE
> f(NULL)
[1] TRUE
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in all(..., na.rm = na.rm) : incorrect argument type
> f(logical(0))
[1] TRUE
> f(character(0))
Error in all(..., na.rm = na.rm) : incorrect argument type
> f(FALSE)
[1] FALSE
> 
> ##  all.equal  :
> f <- get("all.equal", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.character  :
> f <- get("all.equal.character", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
Error in target != current : comparison (2) is possible only for vector types
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.default  :
> f <- get("all.equal.default", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.factor  :
> f <- get("all.equal.factor", pos = 3)
> f()
Error: Argument "current" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
[1] "`current' is not a factor"
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.formula  :
> f <- get("all.equal.formula", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.language  :
> f <- get("all.equal.language", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.list  :
> f <- get("all.equal.list", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.equal.numeric  :
> f <- get("all.equal.numeric", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
Error in target == current : comparison (1) is possible only for vector types
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  all.names  :
> f <- get("all.names", pos = 3)
> f()
Error: Argument "expr" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
character(0)
> 
> ##  all.vars  :
> f <- get("all.vars", pos = 3)
> f()
Error: Argument "expr" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
character(0)
> 
> ##  anova  :
> f <- get("anova", pos = 3)
> f()
Error: no applicable method for "anova"
> f(NULL)
Error: no applicable method for "anova"
> f(NULL,NULL)
Error: no applicable method for "anova"
> f(list())
Error: no applicable method for "anova"
> f(logical(0))
Error: no applicable method for "anova"
> f(character(0))
Error: no applicable method for "anova"
> f(FALSE)
Error: no applicable method for "anova"
> 
> ##  anova.glm  :
> f <- get("anova.glm", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: subscript out of bounds
> f(NULL,NULL)
Error: subscript out of bounds
> f(list())
Error: subscript out of bounds
> f(logical(0))
Error: subscript out of bounds
> f(character(0))
Error: subscript out of bounds
> f(FALSE)
Error: subscript out of bounds
> 
> ##  anova.glm.null  :
> f <- get("anova.glm.null", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: can't coerce NULL into a data.frame
> f(NULL,NULL)
Error in formula(x)[[2]] : subscript out of bounds
> f(list())
Error: can't coerce NULL into a data.frame
> f(logical(0))
Error: can't coerce NULL into a data.frame
> f(character(0))
Error: can't coerce NULL into a data.frame
> f(FALSE)
Error: can't coerce NULL into a data.frame
> 
> ##  anova.glmlist  :
> f <- get("anova.glmlist", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: (list) object cannot be coerced to vector type 14
> f(NULL,NULL)
Error: (list) object cannot be coerced to vector type 14
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
Error: (list) object cannot be coerced to vector type 14
> f(character(0))
Error: (list) object cannot be coerced to vector type 14
> f(FALSE)
Error: invalid formula
> 
> ##  anova.lm  :
> f <- get("anova.lm", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error in 1:object$rank : NA/NaN argument
> f(NULL,NULL)
Error: no applicable method for "df.residual"
> f(list())
Error in 1:object$rank : NA/NaN argument
> f(logical(0))
Error in 1:object$rank : NA/NaN argument
> f(character(0))
Error in 1:object$rank : NA/NaN argument
> f(FALSE)
Error in 1:object$rank : NA/NaN argument
> 
> ##  anova.lm.null  :
> f <- get("anova.lm.null", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error: no applicable method for "df.residual"
> f(NULL,NULL)
Error: no applicable method for "df.residual"
> f(list())
Error: no applicable method for "df.residual"
> f(logical(0))
Error: no applicable method for "df.residual"
> f(character(0))
Error: no applicable method for "df.residual"
> f(FALSE)
Error: no applicable method for "df.residual"
> 
> ##  anova.mlm  :
> f <- get("anova.mlm", pos = 3)
> f()
Error: no anova method implemented for mlm models
> f(NULL)
Error: no anova method implemented for mlm models
> f(NULL,NULL)
Error: no anova method implemented for mlm models
> f(list())
Error: no anova method implemented for mlm models
> f(logical(0))
Error: no anova method implemented for mlm models
> f(character(0))
Error: no anova method implemented for mlm models
> f(FALSE)
Error: no anova method implemented for mlm models
> 
> ##  anovalist.lm  :
> f <- get("anovalist.lm", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
Error in 1:object$rank : NA/NaN argument
> f(NULL,NULL)
Error: no applicable method for "df.residual"
> f(list())
Error in 1:object$rank : NA/NaN argument
> f(logical(0))
Error in 1:object$rank : NA/NaN argument
> f(character(0))
Error in 1:object$rank : NA/NaN argument
> f(FALSE)
Error in 1:object$rank : NA/NaN argument
> 
> ##  any  :
> f <- get("any", pos = 3)
> f()
[1] FALSE
> f(NULL)
[1] FALSE
> f(NULL,NULL)
[1] FALSE
> f(list())
Error in any(..., na.rm = na.rm) : incorrect argument type
> f(logical(0))
[1] FALSE
> f(character(0))
Error in any(..., na.rm = na.rm) : incorrect argument type
> f(FALSE)
[1] FALSE
> 
> ##  aov  :
> f <- get("aov", pos = 3)
> f()
Error: Argument "formula" is missing, with no default
> f(NULL)
Error: subscript out of bounds
> f(NULL,NULL)
Error: subscript out of bounds
> f(list())
Error: subscript out of bounds
> f(logical(0))
Error: subscript out of bounds
> f(character(0))
Error: subscript out of bounds
> f(FALSE)
Error: subscript out of bounds
> 
> ##  aperm  :
> f <- get("aperm", pos = 3)
> f()
Error: Argument "a" is missing, with no default
> f(NULL)
Error: aperm: invalid first argument, must be an array
> f(NULL,NULL)
Error in sort(x) : only vectors can be sorted
> f(list())
Error: aperm: invalid first argument, must be an array
> f(logical(0))
Error: aperm: invalid first argument, must be an array
> f(character(0))
Error: aperm: invalid first argument, must be an array
> f(FALSE)
Error: aperm: invalid first argument, must be an array
> 
> ##  append  :
> f <- get("append", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: Argument "values" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error: Argument "values" is missing, with no default
> f(logical(0))
Error: Argument "values" is missing, with no default
> f(character(0))
Error: Argument "values" is missing, with no default
> f(FALSE)
Error: Argument "values" is missing, with no default
> 
> ##  apply  :
> f <- get("apply", pos = 3)
> f()
Error: Argument "FUN" is missing, with no default
> f(NULL)
Error: Argument "FUN" is missing, with no default
> f(NULL,NULL)
Error: Argument "FUN" is missing, with no default
> f(list())
Error: Argument "FUN" is missing, with no default
> f(logical(0))
Error: Argument "FUN" is missing, with no default
> f(character(0))
Error: Argument "FUN" is missing, with no default
> f(FALSE)
Error: Argument "FUN" is missing, with no default
> 
> ##  approx  :
> f <- get("approx", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: x and y lengths differ
> f(NULL,NULL)
Error: x and y lengths differ
> f(list())
Error: approx requires at least two values to interpolate
> f(logical(0))
Error: x and y lengths differ
> f(character(0))
Error: x and y lengths differ
> f(FALSE)
Error: approx requires at least two values to interpolate
> 
> ##  approxfun  :
> f <- get("approxfun", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: x and y lengths differ
> f(NULL,NULL)
Error: x and y lengths differ
> f(list())
Error: approx requires at least two values to interpolate
> f(logical(0))
Error: x and y lengths differ
> f(character(0))
Error: x and y lengths differ
> f(FALSE)
Error: approx requires at least two values to interpolate
> 
> ##  apropos  :
> f <- get("apropos", pos = 3)
> f()
Error: Argument "what" is missing, with no default
> f(NULL)
Error in grep(pattern, x, ignore.case, extended, value) : invalid argument
> f(NULL,NULL)
Error in grep(pattern, x, ignore.case, extended, value) : invalid argument
> f(list())
 [1] "alist"                   "all.equal.list"         
 [3] "anova.glmlist"           "anovalist.lm"           
 [5] "as.data.frame.list"      "as.list"                
 [7] "as.list.data.frame"      "as.list.default"        
 [9] "as.pairlist"             "coef.listof"            
[11] "dev.list"                "dummy.coef.aovlist"     
[13] "eff.aovlist"             "is.list"                
[15] "is.pairlist"             "list"                   
[17] "list.files"              "make.tables.aovprojlist"
[19] "model.frame.aovlist"     "model.tables.aovlist"   
[21] "pairlist"                "print.aovlist"          
[23] "print.dummy.coef.list"   "print.listof"           
[25] "print.simple.list"       "print.summary.aovlist"  
[27] "proj.aovlist"            "se.aovlist"             
[29] "se.contrast.aovlist"     "summary.aovlist"        
[31] "terms.aovlist"           "unlist"                 
> f(logical(0))
[1] "as.data.frame.logical" "as.logical"            "as.logical.default"   
[4] "is.logical"            "logical"              
> f(character(0))
Error in grep(pattern, x, ignore.case, extended, value) : invalid argument
> f(FALSE)
character(0)
> 
> ##  args  :
> f <- get("args", pos = 3)
> f()
Error: Argument "name" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
NULL
> f(logical(0))
NULL
> f(character(0))
NULL
> f(FALSE)
NULL
> 
> ##  array  :
> f <- get("array", pos = 3)
> f()
[1] NA
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  arrows  :
> f <- get("arrows", pos = 3)
> f()
Error: Argument "x0" is missing, with no default
> f(NULL)
Error: Argument "y0" is missing, with no default
> f(NULL,NULL)
Error: Argument "x1" is missing, with no default
> f(list())
Error: Argument "y0" is missing, with no default
> f(logical(0))
Error: Argument "y0" is missing, with no default
> f(character(0))
Error: Argument "y0" is missing, with no default
> f(FALSE)
Error: Argument "y0" is missing, with no default
> 
> ##  as.array  :
> f <- get("as.array", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  as.call  :
> f <- get("as.call", pos = 3)
> f()
Error: 0 arguments passed to "as.call" which requires 1.
> f(NULL)
Error in f(NULL) : invalid argument list
> f(NULL,NULL)
Error: 2 arguments passed to "as.call" which requires 1.
> f(list())
Error in f(list()) : illegal length 0 argument
> f(logical(0))
Error in f(logical(0)) : invalid argument list
> f(character(0))
Error in f(character(0)) : invalid argument list
> f(FALSE)
Error in f(FALSE) : invalid argument list
> 
> ##  as.char.or.expr  :
> f <- get("as.char.or.expr", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
[1] "FALSE"
> 
> ##  as.character  :
> f <- get("as.character", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
Error in as.character.default(NULL, NULL) : unused argument to function
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
[1] "FALSE"
> 
> ##  as.character.default  :
> f <- get("as.character.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
[1] "FALSE"
> 
> ##  as.complex  :
> f <- get("as.complex", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
complex(0)
> f(NULL,NULL)
Error in as.complex.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 15
> f(logical(0))
complex(0)
> f(character(0))
complex(0)
> f(FALSE)
[1] 0+0i
> 
> ##  as.complex.default  :
> f <- get("as.complex.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
complex(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 15
> f(logical(0))
complex(0)
> f(character(0))
complex(0)
> f(FALSE)
[1] 0+0i
> 
> ##  as.data.frame  :
> f <- get("as.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: can't coerce NULL into a data.frame
> f(NULL,NULL)
Error: can't coerce NULL into a data.frame
> f(list())
NULL data frame with 0 rows
> f(logical(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(FALSE)
  factor(x)
1     FALSE
> 
> ##  as.data.frame.AsIs  :
> f <- get("as.data.frame.AsIs", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] x
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] x
<0 rows> (or 0-length row.names)
> f(list())
[1] x
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] x
<0 rows> (or 0-length row.names)
> f(character(0))
[1] x
<0 rows> (or 0-length row.names)
> f(FALSE)
      x
1 FALSE
> 
> ##  as.data.frame.character  :
> f <- get("as.data.frame.character", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(list())
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(FALSE)
  factor(x)
1     FALSE
> 
> ##  as.data.frame.complex  :
> f <- get("as.data.frame.complex", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] logical(0)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] character(0)
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.data.frame.data.frame  :
> f <- get("as.data.frame.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error in if (i > 1) class(x) <- cl[-seq(length = i - 1)] : missing value where logical needed
> f(NULL,NULL)
Error in if (i > 1) class(x) <- cl[-seq(length = i - 1)] : missing value where logical needed
> f(list())
Error in if (i > 1) class(x) <- cl[-seq(length = i - 1)] : missing value where logical needed
> f(logical(0))
Error in if (i > 1) class(x) <- cl[-seq(length = i - 1)] : missing value where logical needed
> f(character(0))
Error in if (i > 1) class(x) <- cl[-seq(length = i - 1)] : missing value where logical needed
> f(FALSE)
Error in if (i > 1) class(x) <- cl[-seq(length = i - 1)] : missing value where logical needed
> 
> ##  as.data.frame.default  :
> f <- get("as.data.frame.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: can't coerce NULL into a data.frame
> f(NULL,NULL)
Error: can't coerce NULL into a data.frame
> f(list())
NULL data frame with 0 rows
> f(logical(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(FALSE)
  factor(x)
1     FALSE
> 
> ##  as.data.frame.factor  :
> f <- get("as.data.frame.factor", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] logical(0)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] character(0)
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.data.frame.integer  :
> f <- get("as.data.frame.integer", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] logical(0)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] character(0)
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.data.frame.list  :
> f <- get("as.data.frame.list", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL data frame with 0 rows
> f(NULL,NULL)
NULL data frame with 0 rows
> f(list())
NULL data frame with 0 rows
> f(logical(0))
NULL data frame with 0 rows
> f(character(0))
NULL data frame with 0 rows
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.data.frame.logical  :
> f <- get("as.data.frame.logical", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(list())
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] factor(x)
<0 rows> (or 0-length row.names)
> f(FALSE)
  factor(x)
1     FALSE
> 
> ##  as.data.frame.matrix  :
> f <- get("as.data.frame.matrix", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error in vector("list", ncols) : negative length vectors are not allowed
> f(NULL,NULL)
Error in vector("list", ncols) : negative length vectors are not allowed
> f(list())
Error in vector("list", ncols) : negative length vectors are not allowed
> f(logical(0))
Error in vector("list", ncols) : negative length vectors are not allowed
> f(character(0))
Error in vector("list", ncols) : negative length vectors are not allowed
> f(FALSE)
Error in vector("list", ncols) : negative length vectors are not allowed
> 
> ##  as.data.frame.model.matrix  :
> f <- get("as.data.frame.model.matrix", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error in ceiling(length.out) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error in ceiling(length.out) : Non-numeric argument to mathematical function
> f(list())
Error in ceiling(length.out) : Non-numeric argument to mathematical function
> f(logical(0))
Error in ceiling(length.out) : Non-numeric argument to mathematical function
> f(character(0))
Error in ceiling(length.out) : Non-numeric argument to mathematical function
> f(FALSE)
Error in ceiling(length.out) : Non-numeric argument to mathematical function
> 
> ##  as.data.frame.numeric  :
> f <- get("as.data.frame.numeric", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] logical(0)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] character(0)
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.data.frame.ordered  :
> f <- get("as.data.frame.ordered", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] logical(0)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] character(0)
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.data.frame.ts  :
> f <- get("as.data.frame.ts", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] x
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] x
<0 rows> (or 0-length row.names)
> f(list())
[1] x
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] x
<0 rows> (or 0-length row.names)
> f(character(0))
[1] x
<0 rows> (or 0-length row.names)
> f(FALSE)
      x
1 FALSE
> 
> ##  as.data.frame.vector  :
> f <- get("as.data.frame.vector", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(logical(0))
[1] logical(0)
<0 rows> (or 0-length row.names)
> f(character(0))
[1] character(0)
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> 
> ##  as.double  :
> f <- get("as.double", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(NULL,NULL)
Error in as.double.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
numeric(0)
> f(character(0))
numeric(0)
> f(FALSE)
[1] 0
> 
> ##  as.double.default  :
> f <- get("as.double.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
numeric(0)
> f(character(0))
numeric(0)
> f(FALSE)
[1] 0
> 
> ##  as.expression  :
> f <- get("as.expression", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
expression(NULL)
> f(NULL,NULL)
Error in as.expression.default(NULL, NULL) : unused argument to function
> f(list())
expression(NULL)
> f(logical(0))
expression()
> f(character(0))
expression()
> f(FALSE)
expression(FALSE)
> 
> ##  as.expression.default  :
> f <- get("as.expression.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
expression(NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
expression(NULL)
> f(logical(0))
expression()
> f(character(0))
expression()
> f(FALSE)
expression(FALSE)
> 
> ##  as.factor  :
> f <- get("as.factor", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
character(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
character(0)
> f(logical(0))
character(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
Levels:  FALSE 
> 
> ##  as.formula  :
> f <- get("as.formula", pos = 3)
> f()
Error: Argument "object" is missing, with no default
> f(NULL)
list()
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: invalid formula
> f(logical(0))
Error: invalid formula
> f(character(0))
> f(FALSE)
Error: invalid formula
> 
> ##  as.function  :
> f <- get("as.function", pos = 3)
> f()
Error: Argument "l" is missing, with no default
> f(NULL)
Error in as.function.default(l, envir) : argument must have length at least 1
> f(NULL,NULL)
Error in as.function.default(l, envir) : argument must have length at least 1
> f(list())
Error in as.function.default(l, envir) : argument must have length at least 1
> f(logical(0))
Error in as.function.default(l, envir) : list argument expected
> f(character(0))
Error in as.function.default(l, envir) : list argument expected
> f(FALSE)
Error in as.function.default(l, envir) : list argument expected
> 
> ##  as.function.default  :
> f <- get("as.function.default", pos = 3)
> f()
Error: Argument "l" is missing, with no default
> f(NULL)
Error in as.function.default(l, envir) : argument must have length at least 1
> f(NULL,NULL)
Error in as.function.default(l, envir) : argument must have length at least 1
> f(list())
Error in as.function.default(l, envir) : argument must have length at least 1
> f(logical(0))
Error in as.function.default(l, envir) : list argument expected
> f(character(0))
Error in as.function.default(l, envir) : list argument expected
> f(FALSE)
Error in as.function.default(l, envir) : list argument expected
> 
> ##  as.integer  :
> f <- get("as.integer", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(NULL,NULL)
Error in as.integer.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 13
> f(logical(0))
numeric(0)
> f(character(0))
numeric(0)
> f(FALSE)
[1] 0
> 
> ##  as.integer.default  :
> f <- get("as.integer.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 13
> f(logical(0))
numeric(0)
> f(character(0))
numeric(0)
> f(FALSE)
[1] 0
> 
> ##  as.list  :
> f <- get("as.list", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
list()
> f(NULL,NULL)
Error in as.list.default(NULL, NULL) : unused argument to function
> f(list())
list()
> f(logical(0))
list()
> f(character(0))
list()
> f(FALSE)
[[1]]
[1] 0

> 
> ##  as.list.data.frame  :
> f <- get("as.list.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  as.list.default  :
> f <- get("as.list.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
list()
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
list()
> f(logical(0))
list()
> f(character(0))
list()
> f(FALSE)
[[1]]
[1] 0

> 
> ##  as.logical  :
> f <- get("as.logical", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
logical(0)
> f(NULL,NULL)
Error in as.logical.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 10
> f(logical(0))
logical(0)
> f(character(0))
logical(0)
> f(FALSE)
[1] FALSE
> 
> ##  as.logical.default  :
> f <- get("as.logical.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
logical(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 10
> f(logical(0))
logical(0)
> f(character(0))
logical(0)
> f(FALSE)
[1] FALSE
> 
> ##  as.matrix  :
> f <- get("as.matrix", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
     [,1]
> f(logical(0))
     [,1]
> f(character(0))
     [,1]
> f(FALSE)
      [,1]
[1,] FALSE
> 
> ##  as.matrix.data.frame  :
> f <- get("as.matrix.data.frame", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error in 1:p : NA/NaN argument
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in 1:p : NA/NaN argument
> f(logical(0))
Error in 1:p : NA/NaN argument
> f(character(0))
Error in 1:p : NA/NaN argument
> f(FALSE)
Error in 1:p : NA/NaN argument
> 
> ##  as.matrix.default  :
> f <- get("as.matrix.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: attempt to set an attribute on NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
     [,1]
> f(logical(0))
     [,1]
> f(character(0))
     [,1]
> f(FALSE)
      [,1]
[1,] FALSE
> 
> ##  as.matrix.noquote  :
> f <- get("as.matrix.noquote", pos = 3)
> f()
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL)
Error in NextMethod(generic, object, ...) : object not specified
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error in NextMethod(generic, object, ...) : object not specified
> f(logical(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(character(0))
Error in NextMethod(generic, object, ...) : object not specified
> f(FALSE)
Error in NextMethod(generic, object, ...) : object not specified
> 
> ##  as.name  :
> f <- get("as.name", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: invalid type/length (1/0) in vector allocation
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 1
> f(logical(0))
Error: Invalid data of mode "H" (too short)
> f(character(0))
Error: Invalid data of mode "H" (too short)
> f(FALSE)
FALSE
> 
> ##  as.null  :
> f <- get("as.null", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
Error in as.null.default(NULL, NULL) : unused argument to function
> f(list())
NULL
> f(logical(0))
NULL
> f(character(0))
NULL
> f(FALSE)
NULL
> 
> ##  as.null.default  :
> f <- get("as.null.default", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
NULL
> f(logical(0))
NULL
> f(character(0))
NULL
> f(FALSE)
NULL
> 
> ##  as.numeric  :
> f <- get("as.numeric", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(NULL,NULL)
Error in as.double.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
numeric(0)
> f(character(0))
numeric(0)
> f(FALSE)
[1] 0
> 
> ##  as.ordered  :
> f <- get("as.ordered", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
ordered(0)
Levels:   
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
ordered(0)
Levels:   
> f(logical(0))
ordered(0)
Levels:   
> f(character(0))
ordered(0)
Levels:   
> f(FALSE)
[1] FALSE
Levels:  FALSE 
> 
> ##  as.pairlist  :
> f <- get("as.pairlist", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
NULL
> f(logical(0))
NULL
> f(character(0))
NULL
> f(FALSE)
[[1]]
[1] FALSE

> 
> ##  as.qr  :
> f <- get("as.qr", pos = 3)
> f()
Error: you cannot be serious
> f(NULL)
Error: you cannot be serious
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: you cannot be serious
> f(logical(0))
Error: you cannot be serious
> f(character(0))
Error: you cannot be serious
> f(FALSE)
Error: you cannot be serious
> 
> ##  as.real  :
> f <- get("as.real", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(NULL,NULL)
Error in as.double.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
numeric(0)
> f(character(0))
numeric(0)
> f(FALSE)
[1] 0
> 
> ##  as.single  :
> f <- get("as.single", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
Warning message: 
type single is not supported in R in: as.single.default(NULL) 
> f(NULL,NULL)
Error in as.single.default(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
numeric(0)
Warning message: 
type single is not supported in R in: as.single.default(logical(0)) 
> f(character(0))
numeric(0)
Warning message: 
type single is not supported in R in: as.single.default(character(0)) 
> f(FALSE)
[1] 0
Warning message: 
type single is not supported in R in: as.single.default(FALSE) 
> 
> ##  as.single.default  :
> f <- get("as.single.default", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
numeric(0)
Warning message: 
type single is not supported in R in: f(NULL) 
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: (list) object cannot be coerced to vector type 14
> f(logical(0))
numeric(0)
Warning message: 
type single is not supported in R in: f(logical(0)) 
> f(character(0))
numeric(0)
Warning message: 
type single is not supported in R in: f(character(0)) 
> f(FALSE)
[1] 0
Warning message: 
type single is not supported in R in: f(FALSE) 
> 
> ##  as.ts  :
> f <- get("as.ts", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: ts object must have one or more observations
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument to function
> f(list())
Error: ts object must have one or more observations
> f(logical(0))
Error: ts object must have one or more observations
> f(character(0))
Error: ts object must have one or more observations
> f(FALSE)
Time Series:
Start = 1 
End = 1 
Frequency = 1 
[1] FALSE
> 
> ##  as.vector  :
> f <- get("as.vector", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
Error in as.vector(x, mode) : invalid "mode" of argument
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
> 
> ##  as.vector.factor  :
> f <- get("as.vector.factor", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
NULL
> f(NULL,NULL)
Error in type == "any" : comparison (1) is possible only for vector types
> f(list())
NULL
> f(logical(0))
NULL
> f(character(0))
NULL
> f(FALSE)
NULL
> 
> ##  asin  :
> f <- get("asin", pos = 3)
> f()
Error: 0 arguments passed to "asin" which requires 1.
> f(NULL)
Error in f(NULL) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error: 2 arguments passed to "asin" which requires 1.
> f(list())
Error in f(list()) : Non-numeric argument to mathematical function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : Non-numeric argument to mathematical function
> f(FALSE)
[1] 0
> 
> ##  asinh  :
> f <- get("asinh", pos = 3)
> f()
Error: 0 arguments passed to "asinh" which requires 1.
> f(NULL)
Error in f(NULL) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error: 2 arguments passed to "asinh" which requires 1.
> f(list())
Error in f(list()) : Non-numeric argument to mathematical function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : Non-numeric argument to mathematical function
> f(FALSE)
[1] 0
> 
> ##  assign  :
> f <- get("assign", pos = 3)
> f()
Error: Argument "x" is missing, with no default
> f(NULL)
Error: Argument "value" is missing, with no default
> f(NULL,NULL)
Error: assign: invalid first argument
> f(list())
Error: Argument "value" is missing, with no default
> f(logical(0))
Error: Argument "value" is missing, with no default
> f(character(0))
Error: Argument "value" is missing, with no default
> f(FALSE)
Error: Argument "value" is missing, with no default
> 
> ##  atan  :
> f <- get("atan", pos = 3)
> f()
Error: 0 arguments passed to "atan" which requires 1 or 2
> f(NULL)
Error in f(NULL) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error in f(NULL, NULL) : Non-numeric argument to mathematical function
> f(list())
Error in f(list()) : Non-numeric argument to mathematical function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : Non-numeric argument to mathematical function
> f(FALSE)
[1] 0
> 
> ##  atan2  :
> f <- get("atan2", pos = 3)
> f()
Error: Argument "y" is missing, with no default
> f(NULL)
Error: Argument "x" is missing, with no default
> f(NULL,NULL)
Error in atan2(y, x) : Non-numeric argument to mathematical function
> f(list())
Error: Argument "x" is missing, with no default
> f(logical(0))
Error: Argument "x" is missing, with no default
> f(character(0))
Error: Argument "x" is missing, with no default
> f(FALSE)
Error: Argument "x" is missing, with no default
> 
> ##  atanh  :
> f <- get("atanh", pos = 3)
> f()
Error: 0 arguments passed to "atanh" which requires 1.
> f(NULL)
Error in f(NULL) : Non-numeric argument to mathematical function
> f(NULL,NULL)
Error: 2 arguments passed to "atanh" which requires 1.
> f(list())
Error in f(list()) : Non-numeric argument to mathematical function
> f(logical(0))
numeric(0)
> f(character(0))
Error in f(character(0)) : Non-numeric argument to mathematical function
> f(FALSE)
[1] 0
> 
> ##  attach  :
> f <- get("attach", pos = 3)
> f()
Error: Argument "what" is missing, with no default
> f(NULL)
> f(NULL,NULL)
Error: attach: pos must be an integer
> f(list())
> f(logical(0))
Error: attach only works for lists and data frames
> f(character(0))
Error: attach only works for lists and data frames
> f(FALSE)
Error: attach only works for lists and data frames
> 
> ##  attr  :
> f <- get("attr", pos = 3)
> f()
Error: Argument "which" is missing, with no default
> f(NULL)
Error: Argument "which" is missing, with no default
> f(NULL,NULL)
Error: attribute name must be of mode character
> f(list())
Error: Argument "which" is missing, with no default
> f(logical(0))
Error: Argument "which" is missing, with no default
> f(character(0))
Error: Argument "which" is missing, with no default
> f(FALSE)
Error: Argument "which" is missing, with no default
> 
> ##  attr.all.equal  :
> f <- get("attr.all.equal", pos = 3)
> f()
Error: Argument "target" is missing, with no default
> f(NULL)
Error: Argument "current" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error: Argument "current" is missing, with no default
> f(logical(0))
Error: Argument "current" is missing, with no default
> f(character(0))
Error: Argument "current" is missing, with no default
> f(FALSE)
Error: Argument "current" is missing, with no default
> 
> ##  attr<-  :
> f <- get("attr<-", pos = 3)
> f()
Error: attr<- : name must be of mode character
> f(NULL)
Error: attr<- : name must be of mode character
> f(NULL,NULL)
Error: attr<- : name must be of mode character
> f(list())
Error: attr<- : name must be of mode character
> f(logical(0))
Error: attr<- : name must be of mode character
> f(character(0))
Error: attr<- : name must be of mode character
> f(FALSE)
Error: attr<- : name must be of mode character
> 
> ##  attributes  :
> f <- get("attributes", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(logical(0))
NULL
> f(character(0))
NULL
> f(FALSE)
NULL
> 
> ##  attributes<-  :
> f <- get("attributes<-", pos = 3)
> f()
NULL
> f(NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(logical(0))
logical(0)
> f(character(0))
character(0)
> f(FALSE)
[1] FALSE
